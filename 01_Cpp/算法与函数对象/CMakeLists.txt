
cmake_minimum_required(VERSION 3.0.2)

project("algorithm test" CXX)

include(CheckCXXCompilerFlag)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -g -O0 -Wall -W")

add_executable(accumulate       accumulate.cpp)
add_executable(adjacent_find    adjacent_find.cpp)
add_executable(all_of           all_of.cpp)
add_executable(any_of           any_of.cpp)
add_executable(copy             copy.cpp)
add_executable(copy_of          copy_of.cpp)
add_executable(count_if         count_if.cpp)
add_executable(equal            equal.cpp)
add_executable(equal_range      equal_range.cpp)
add_executable(equal_range2     equal_range2.cpp)
add_executable(fill             fill.cpp)
add_executable(find_end         find_end.cpp)
add_executable(find_first_of    find_first_of.cpp)
add_executable(find_if          find_if.cpp)
add_executable(find_if_not      find_if_not.cpp)
add_executable(for_each         for_each.cpp)
add_executable(is_sorted        is_sorted.cpp)
add_executable(minmax_element   minmax_element.cpp)
add_executable(mismatch         mismatch.cpp)
add_executable(none_of          none_of.cpp)
add_executable(remove_if        remove_if.cpp)
add_executable(remove_if2       remove_if2.cpp)
add_executable(remove_copy_if   remove_copy_if.cpp)
add_executable(replace_if       replace_if.cpp)
add_executable(replace_copy_if  replace_copy_if.cpp)
add_executable(search           search.cpp)
add_executable(sort             sort.cpp)
add_executable(sort2            sort2.cpp)
add_executable(transform        transform.cpp)
add_executable(unique           unique.cpp)
add_executable(unique_copy      unique_copy.cpp)
