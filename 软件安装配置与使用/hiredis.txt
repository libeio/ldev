
//////////////////// windows ////////////////////

主要目标是获取hiredis.lib和Win32_Interop.lib

1.下载redis-3.0.zip的压缩包，大约有2.25MB
2.解压后进入目录找到RedisServer.sln或RedisServer.vcxproj，使用VS打开
	<这里使用VS2015打开RedisServer.vcxprog>
	打开时可能会弹出升级VC++编译器和库的对话框，选择确定即可
3.一个有9个工程文件，因此每个文件均可独立编译。但除了hiredis和Win32_Interop外，其他七个文件编译时需要依赖
	Win32_Interop所生成的.lib库，所以能够编译成功Win32_Interop很重要。
4.不过在编译Win32_Interop过程中还是出现了一些问题，其解决方法如下：
	问题一：
		0x2 trying to open file <EventLog.mc>.
		RC1110 could not open resources/EventLog.rc
		LNK118 无法打开输入文件"resources/EventLog.res"
	Solution:
		在工程文件src\Win32_Interop下找到Eventlog.mc，删除
		在解决方案资源管理器中将EventLog.mc删除
	继续编译，看是否成功
	问题二：
		RC : fatal error RC1107: invalid usage; use RC /? for Help
	Solution:
	可能是属性页中【配置属性】下面的【资源】选项出了问题，打开【资源】选项下面的命令行，将对应
	页面中【其他选项】中的内容删除，之后编译即可
5.打开属性页
	【配置属性】->【C/C++】->【常规】->【附加包含目录】，在这里添加头文件路径，我这里添加的是：
			D:\redis-3.0\src
			D:\redis-3.0\deps\hiredis
	【配置属性】->【链接器】->【常规】->【附加库目录】，在这里添加库目录，我这里添加的是：
			D:\redis-3.0\msvs\x64
	【配置属性】->【链接器】->【输入】->【附加依赖项】，在这里添加库名，我这里添加的是：
			hiredis.lib
			win32_interop.lib		.lib库名是一定要添加的，否则会产生链接错误
			ws2_32.lib	//用到winsock的话还要加上这个
	【配置属性】->【C/C++】->【代码生成】->【运行库】，改成 多线程调试（/MTd）


不同的编译器对应的平台工具集（属性->配置属性->常规->平台工具集）
VS2010	-	v100
VS2012	-	v110
VS2015	-	v140

VS2010的项目用VS2015打开时，如果出现LNK2001,LNK2005,LNK2019等错误时，可以尝试将平台工具集由v100换成v140

stdcall --pascal调用规范。在Microsoft C++系列的C/C++编译器中，常常用PASCAL宏来声明这个调用约定，类似的宏还有WINAPI和CALLBACK。
stdcall调用规范声明的语法为：
int __stdcall function(int a,int b)
stdcall的调用约定意味着：
1. 参数从右向左压入堆栈
2. 函数自身修改堆栈
3. 函数名自动加前导下划线，后面紧跟一个@符号，其后紧跟着参数的尺寸
编译时，这个函数的名字被翻译成_function@8

json头文件要与.lib文件匹配，一般用生成.lib的作为头文件，如果随意拼凑，可能会因为生成.lib版本与头文件不同产生链接错误。

Json只能写入ANSCII编码，如果要在Unicode环境中运行，需要使用到Adaptor。（应该是这样写的）

JSON 文件的文件类型是 ".json"

Json::Value::isNumeric()与Json::Value::isDouble()用法是相同的。

Json的一些函数
begin
end
compare
demand
empty
find
get
getComent
